# This is a basic workflow to help you get started with CI/CD for your Flutter project.

name: Flutter CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull requests to the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job checks for formatting, linting, and runs tests
  analyze_and_test:
    name: Analyze & Test
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Sets up the Flutter SDK
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # Use your project's Flutter version
          channel: 'stable'
          cache: true

      # Gets Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Runs static analysis
      - name: Analyze project
        run: flutter analyze

      # Runs widget tests
      - name: Run tests
        run: flutter test

  # This job builds the Android app
  build_android:
    name: Build Android
    needs: analyze_and_test # This job will only run if the analyze_and_test job succeeds
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # Use your project's Flutter version
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # The Gradle deprecation warnings in your problems-report.html are from dependencies.
      # While you can't fix them directly, this step ensures your build doesn't fail because of them.  
      # For a stricter pipeline, you could remove this.
      - name: Clean and Build Android App Bundle
        run: flutter build appbundle --no-sound-null-safety

  # This job builds the iOS app
  # Note: iOS builds require a macOS runner.
  build_ios:
    name: Build iOS
    needs: analyze_and_test
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # Use your project's Flutter version
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build iOS
        run: flutter build ipa --no-sound-null-safety --export-options-plist=ios/ExportOptions.plist

  # This job builds the web app and uploads it as an artifact
  build_web:
    name: Build Web
    needs: analyze_and_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2' # Use your project's Flutter version
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build Web
        # The base-href is crucial for correct asset loading on GitHub Pages
        run: flutter build web --release --base-href /squeeze_pix/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/web

  # This job deploys the artifact to GitHub Pages 
  deploy_web:
    name: Deploy Web
    needs: build_web
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4